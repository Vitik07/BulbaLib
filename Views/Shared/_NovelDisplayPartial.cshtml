@model BulbaLib.Models.Novel
@using Newtonsoft.Json

@if (Model != null)
{
    <div class="admin-novel-preview-card">
        @{
            string firstCoverUrl = null;
            if (!string.IsNullOrEmpty(Model.Covers))
            {
                try
                {
                    var coversList = JsonConvert.DeserializeObject<List<string>>(Model.Covers);
                    if (coversList != null && coversList.Any())
                    {
                        firstCoverUrl = coversList.First();
                    }
                }
                catch (JsonReaderException) // Not a JSON array
                {
                    if (Uri.IsWellFormedUriString(Model.Covers, UriKind.Absolute)) // Check if it's a single URL
                    {
                        firstCoverUrl = Model.Covers;
                    }
                }
                catch (Exception)
                {
                    // Silently ignore other errors for covers, worst case no cover is shown.
                }
            }
        }

        @if (!string.IsNullOrEmpty(firstCoverUrl))
        {
            <div class="anp-cover-section">
                <img src="@firstCoverUrl" alt="Novel Cover" class="anp-cover-image" />
            </div>
        }

        <div class="anp-details-section">
            <h4 class="anp-title">@Model.Title</h4>

            @if (!string.IsNullOrEmpty(Model.AlternativeTitles))
            {
                List<string> altTitlesList = null;
                try { altTitlesList = JsonConvert.DeserializeObject<List<string>>(Model.AlternativeTitles); } catch { }

                if (altTitlesList != null && altTitlesList.Any())
                {
                    <div class="anp-alt-titles">
                        <strong>Альтернативные названия:</strong>
                        @foreach (var altTitle in altTitlesList)
                        {
                            <span class="anp-alt-title-item">@altTitle</span>@if (altTitle != altTitlesList.Last()){<span>, </span>}
                        }
                    </div>
                }
                else if (!string.IsNullOrWhiteSpace(Model.AlternativeTitles) && !Model.AlternativeTitles.StartsWith("[")) // Display as plain text if not a list and not empty JSON array
                {
                    <div class="anp-alt-titles">
                        <strong>Альтернативные названия:</strong> @Model.AlternativeTitles
                    </div>
                }
            }

            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="anp-description">
                    <strong>Описание:</strong>
                    <p>@Model.Description</p>
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.Genres))
            {
                List<string> genresList = null;
                try { genresList = JsonConvert.DeserializeObject<List<string>>(Model.Genres); } catch { }

                if (genresList != null && genresList.Any())
                {
                    <div class="anp-genres">
                        <strong>Жанры:</strong>
                        <div class="anp-tag-list">
                            @foreach (var genre in genresList)
                            {
                                <span class="anp-tag anp-genre-tag">@genre</span>
                            }
                        </div>
                    </div>
                }
                 else if (!string.IsNullOrWhiteSpace(Model.Genres) && !Model.Genres.StartsWith("["))
                {
                    <div class="anp-genres">
                        <strong>Жанры:</strong> <span class="anp-tag anp-genre-tag">@Model.Genres</span>
                    </div>
                }
            }

            @if (!string.IsNullOrEmpty(Model.Tags))
            {
                List<string> tagsList = null;
                try { tagsList = JsonConvert.DeserializeObject<List<string>>(Model.Tags); } catch { }

                if (tagsList != null && tagsList.Any())
                {
                    <div class="anp-tags">
                        <strong>Теги:</strong>
                        <div class="anp-tag-list">
                            @foreach (var tag in tagsList)
                            {
                                <span class="anp-tag anp-misc-tag">@tag</span>
                            }
                        </div>
                    </div>
                }
                else if (!string.IsNullOrWhiteSpace(Model.Tags) && !Model.Tags.StartsWith("["))
                {
                     <div class="anp-tags">
                        <strong>Теги:</strong> <span class="anp-tag anp-misc-tag">@Model.Tags</span>
                    </div>
                }
            }

            <div class="anp-meta-info">
                <div><strong>ID:</strong> @Model.Id</div>
                <div><strong>Тип:</strong> @(!string.IsNullOrEmpty(Model.Type) ? Model.Type : "-")</div>
                <div><strong>Формат:</strong> @(!string.IsNullOrEmpty(Model.Format) ? Model.Format : "-")</div>
                <div><strong>Год выпуска:</strong> @(Model.ReleaseYear.HasValue ? Model.ReleaseYear.Value.ToString() : "-")</div>
                <div><strong>Автор ID:</strong> @(Model.AuthorId.HasValue ? Model.AuthorId.Value.ToString() : "-")</div>
            </div>
        </div>
    </div>
}
else
{
    <p class="text-warning">Данные о новелле отсутствуют.</p>
}
