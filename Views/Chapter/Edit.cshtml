@model BulbaLib.Models.ChapterEditModel
@{
    ViewData["Title"] = "Редактировать главу";

    Layout = null;
}

<h1>@ViewData["Title"]</h1>
<link rel="stylesheet" href="~/css/novel_form.css" asp-append-version="true" />
@if (ViewData["NovelTitle"] != null)
{
    <h4>Новелла: @ViewData["NovelTitle"]</h4>
    <h5>Глава: @Model.Number - @Model.Title</h5>
}


<form asp-controller="ChapterView" asp-action="Edit" asp-route-id="@Model.Id" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="NovelId" />

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group mb-3">
        <label asp-for="Number" class="control-label"></label>
        <input asp-for="Number" class="form-control" />
        <span asp-validation-for="Number" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="ChapterTextFile" class="control-label">Загрузить новый текстовый файл главы (.txt)</label>
        <input type="file" asp-for="ChapterTextFile" class="form-control" accept=".txt" />
        <span asp-validation-for="ChapterTextFile" class="text-danger"></span>
        <small id="fileLoadStatus" class="form-text text-muted">Если выбран новый файл, его содержимое заменит текущий текст главы в поле "Содержимое".</small>
    </div>

    <div class="form-group mb-3">
        <label asp-for="Content" class="control-label"></label>
        <textarea asp-for="Content" class="form-control" rows="15"></textarea>
        <span asp-validation-for="Content" class="text-danger"></span>
        <small class="form-text text-muted">Поддерживается HTML разметка для форматирования текста главы. Будет перезаписано содержимым файла, если выбран новый файл.</small>
    </div>

    <div class="form-group mt-4">
        <button type="submit" class="btn btn-primary">Сохранить изменения</button>
        <a asp-controller="NovelView" asp-action="Details" asp-route-id="@Model.NovelId" class="btn btn-secondary">Отмена</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const chapterTextFileInput = document.querySelector('input[type="file"][asp-for="ChapterTextFile"]');
            const contentTextArea = document.querySelector('textarea[asp-for="Content"]');
            const form = document.querySelector('form[asp-action="Edit"]');
            const chapterId = '@Model.Id'; 
            const novelIdForRedirect = '@Model.NovelId';

            if (chapterTextFileInput && contentTextArea) {
                chapterTextFileInput.addEventListener('change', function (event) {
                    const file = event.target.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            contentTextArea.value = e.target.result;
                            const fileLoadStatus = document.getElementById('fileLoadStatus');
                            if (fileLoadStatus) {
                                fileLoadStatus.textContent = 'Содержимое файла загружено в текстовое поле.';
                                fileLoadStatus.style.color = 'green';
                                setTimeout(() => {
                                    fileLoadStatus.textContent = 'Если выбран новый файл, его содержимое заменит текущий текст главы в поле "Содержимое".';
                                    fileLoadStatus.style.color = ''; 
                                }, 3000);
                            }
                            // Optionally clear the file input
                            // chapterTextFileInput.value = '';
                        };
                        reader.onerror = function (e) {
                            console.error("File reading error", e);
                            const fileLoadStatus = document.getElementById('fileLoadStatus');
                            if (fileLoadStatus) {
                                fileLoadStatus.textContent = 'Ошибка при чтении файла. Убедитесь, что это текстовый файл.';
                                fileLoadStatus.style.color = 'red';
                            } else {
                                alert("Ошибка при чтении файла. Убедитесь, что это текстовый файл.");
                            }
                        };
                        reader.readAsText(file);
                    }
                });
            }
        });
    </script>
}
