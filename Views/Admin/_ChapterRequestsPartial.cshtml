﻿@model List<BulbaLib.Models.ChapterModerationRequestViewModel>

@{
    // Layout = null; // This is a partial view
}

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>ID Запроса</th>
                <th>Тип</th>
                <th>Новелла</th>
                <th>Глава (Номер/Название)</th>
                <th>Пользователь</th>
                <th>Дата Запроса</th>
                <th>Статус</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var req in Model)
                {
                    <tr>
                        <td>@req.RequestId</td>
                        <td><span class="badge bg-primary">@req.RequestTypeFriendlyName</span></td>
                        <td>@req.NovelTitle (ID: @req.NovelId)</td>
                        <td>
                            @if (!string.IsNullOrEmpty(req.ChapterNumber) || !string.IsNullOrEmpty(req.ChapterTitle))
                            {
                                <span>@(req.ChapterNumber ?? "N/A") - @(req.ChapterTitle ?? "N/A")</span>
                            }
                            else if (req.ProposedChapterData != null)
                            {
                                <span>@(req.ProposedChapterData.Number ?? "N/A") - @(req.ProposedChapterData.Title ?? "N/A") <em class="text-muted">(Новое)</em></span>
                            }
                            else
                            {
                                <span>(Данные о главе отсутствуют)</span>
                            }
                        </td>
                        <td>@req.RequesterLogin (ID: @req.UserId)</td>
                        <td>@req.CreatedAt.ToString("g")</td>
                        <td><span class="badge bg-warning">@req.Status</span></td> @* Assuming all fetched are Pending *@
                        <td>
                            <a asp-action="ChapterRequestDetails" asp-controller="Admin" asp-route-requestId="@req.RequestId" class="btn btn-sm btn-info" title="Детали">
                                <i class="fas fa-eye"></i> Детали
                            </a>
                            <form asp-action="ApproveChapterRequest" asp-controller="Admin" method="post" class="d-inline form-approve-chapter-request" data-request-id="@req.RequestId">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="requestId" value="@req.RequestId" />
                                <button type="submit" class="btn btn-sm btn-success" title="Одобрить">
                                    <i class="fas fa-check"></i> Одобрить
                                </button>
                            </form>
                            <button type="button" class="btn btn-sm btn-danger btn-reject-chapter" data-bs-toggle="modal" data-bs-target="#rejectChapterModal" data-request-id="@req.RequestId" title="Отклонить">
                                <i class="fas fa-times"></i> Отклонить
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="8" class="text-center">Нет ожидающих запросов по главам.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
}

@if (totalPages > 1)
{
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link chapter-request-page-link" href="#" data-page="@i">@i</a>
                </li>
            }
        </ul>
    </nav>
}

@* Modal for Rejection Comment (Example) - This should ideally be in the main Index.cshtml or _Layout to avoid duplication *@
<div class="modal fade" id="rejectChapterModal" tabindex="-1" aria-labelledby="rejectChapterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formRejectChapter" asp-action="RejectChapterRequest" asp-controller="Admin" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="requestId" id="rejectChapterRequestId" />
                <div class="modal-header">
                    <h5 class="modal-title" id="rejectChapterModalLabel">Отклонить запрос на модерацию главы</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="moderationCommentChapter" class="form-label">Причина отклонения (необязательно)</label>
                        <textarea class="form-control" id="moderationCommentChapter" name="moderationComment" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-danger">Отклонить запрос</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // AJAX for chapter requests pagination
        $('#chapter-requests-content-area').on('click', '.chapter-request-page-link', function(e) {
            e.preventDefault();
            var page = $(this).data('page');
            var pageSize = @ViewData["PageSize"]; // Get pageSize from ViewData
            $('#chapter-requests-content-area').load('@Url.Action("ChapterRequestsPartial", "Admin")?page=' + page + '&pageSize=' + pageSize);
        });

        // AJAX for approving chapter request
        $('.form-approve-chapter-request').submit(function (e) {
            e.preventDefault();
            var form = $(this);
            if (!confirm('Вы уверены, что хотите одобрить этот запрос?')) return;

            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        // Reload with current page and page size to stay on the same page after action
                        var currentPage = @ViewData["CurrentPage"];
                        var pageSize = @ViewData["PageSize"];
                        $('#chapter-requests-content-area').load('@Url.Action("ChapterRequestsPartial", "Admin")?page=' + currentPage + '&pageSize=' + pageSize);
                    } else {
                        alert('Ошибка: ' + response.message);
                    }
                },
                error: function () {
                    alert('Произошла ошибка при отправке запроса на одобрение.');
                }
            });
        });

        // Prepare and handle modal for rejecting chapter request
        var rejectChapterModal = document.getElementById('rejectChapterModal');
        if (rejectChapterModal) {
            rejectChapterModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var requestId = button.getAttribute('data-request-id');
                var modalRequestIdInput = rejectChapterModal.querySelector('#rejectChapterRequestId');
                modalRequestIdInput.value = requestId;
            });

            $('#formRejectChapter').submit(function(e) {
                e.preventDefault();
                var form = $(this);
                if (!confirm('Вы уверены, что хотите отклонить этот запрос?')) return;
                
                $.ajax({
                    type: form.attr('method'),
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                             var modalInstance = bootstrap.Modal.getInstance(rejectChapterModal);
                            if(modalInstance) modalInstance.hide();
                            var currentPage = @ViewData["CurrentPage"];
                            var pageSize = @ViewData["PageSize"];
                            $('#chapter-requests-content-area').load('@Url.Action("ChapterRequestsPartial", "Admin")?page=' + currentPage + '&pageSize=' + pageSize);
                        } else {
                            alert('Ошибка: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('Произошла ошибка при отправке запроса на отклонение.');
                    }
                });
            });
        }
    });
</script>
