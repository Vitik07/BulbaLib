@model IEnumerable<BulbaLib.Models.NovelModerationRequestViewModel>
@using BulbaLib.Models // Required for ModerationStatus enum

@{
    // ViewData for pagination
    int currentPage = ViewData["CurrentPage"] as int? ?? 1;
    int totalPages = ViewData["TotalPages"] as int? ?? 1;
    int pageSize = ViewData["PageSize"] as int? ?? 10; // Default to 10 if not set
}

<div class="table-responsive">
    <table class="table table-striped table-hover adm-table">
        <thead>
            <tr>
                <th style="width: 5%;">Обложка</th>
                <th style="width: 30%;">Название новеллы</th>
                <th style="width: 20%;">Тип запроса</th>
                <th style="width: 15%;">Пользователь</th>
                <th style="width: 15%;">Дата</th>
                @* <th style="width: 10%;">Статус</th> *@ @* Status is always Pending here *@
                <th style="width: 15%;">Действия</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @if (!string.IsNullOrEmpty(item.NovelCoverImageUrl))
                            {
                                <img src="@item.NovelCoverImageUrl" alt="Обложка" style="max-width: 50px; max-height: 70px; object-fit: cover;" class="img-thumbnail" />
                            }
                            else
                            {
                                <div style="width: 50px; height: 70px; background-color: #eee; display: flex; align-items: center; justify-content: center;" class="img-thumbnail">
                                    <small class="text-muted">Нет</small>
                                </div>
                            }
                        </td>
                        <td>
                            @if (item.NovelId.HasValue && item.NovelId > 0)
                            {
                                <a asp-controller="NovelView" asp-action="Novel" asp-route-id="@item.NovelId" target="_blank" title="@item.NovelTitle">
                                    @item.NovelTitle
                                </a>
                                <small class="text-muted d-block">ID: @item.NovelId</small>
                            }
                            else
                            {
                                @item.NovelTitle
                                <small class="text-muted d-block">(Новая новелла)</small>
                            }
                        </td>
                        <td><span class="badge bg-primary">@item.RequestActionDisplay</span></td>
                        <td>@Html.DisplayFor(modelItem => item.UserLogin)</td>
                        <td>@item.RequestedAt.ToString("dd.MM.yy HH:mm")</td>
                        @*<td><span class="badge bg-warning text-dark">@item.Status.ToString()</span></td>*@
                        <td>
                            <a asp-controller="Admin" asp-action="NovelRequestDetails" asp-route-requestId="@item.RequestId" class="btn btn-sm btn-info mb-1" title="Просмотреть детали">
                                <i class="fas fa-eye"></i>
                            </a>
                            <form asp-controller="Admin" asp-action="ApproveNovelRequest" asp-route-requestId="@item.RequestId" method="post" class="d-inline novel-request-form-approve">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-success mb-1" title="Одобрить">
                                    <i class="fas fa-check"></i>
                                </button>
                            </form>
                            <button type="button" class="btn btn-sm btn-danger mb-1 btn-reject-novel-modal" title="Отклонить"
                                    data-bs-toggle="modal" data-bs-target="#rejectNovelModal_@item.RequestId"
                                    data-request-id="@item.RequestId"
                                    data-novel-title="@item.NovelTitle">
                                <i class="fas fa-times"></i>
                            </button>

                            <!-- Modal for Rejection -->
                            <div class="modal fade" id="rejectNovelModal_@item.RequestId" tabindex="-1" aria-labelledby="rejectNovelModalLabel_@item.RequestId" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <form asp-controller="Admin" asp-action="RejectNovelRequest" asp-route-requestId="@item.RequestId" method="post" class="novel-request-form-reject">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="requestId" value="@item.RequestId" />
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="rejectNovelModalLabel_@item.RequestId">Отклонить запрос - Новелла</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <p>Новелла: <strong>@item.NovelTitle</strong></p>
                                                <div class="mb-3">
                                                    <label for="moderationCommentNovel_@item.RequestId" class="form-label">Причина отклонения (необязательно):</label>
                                                    <textarea name="reason" id="moderationCommentNovel_@item.RequestId" class="form-control" rows="3"></textarea>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                                                <button type="submit" class="btn btn-danger">Отклонить запрос</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center">Нет ожидающих запросов на модерацию новелл.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (totalPages > 1)
{
    <nav aria-label="Novel requests navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                <a class="page-link novel-request-page-link" href="#" data-page="@(currentPage - 1)">Предыдущая</a>
            </li>
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link novel-request-page-link" href="#" data-page="@i">@i</a>
                </li>
            }
            <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                <a class="page-link novel-request-page-link" href="#" data-page="@(currentPage + 1)">Следующая</a>
            </li>
        </ul>
    </nav>
}

<script>
    $(function () {
        const novelRequestsContainerId = '#novel-requests-content-area';

        $(novelRequestsContainerId).off('click', '.novel-request-page-link').on('click', '.novel-request-page-link', function (e) {
            e.preventDefault();
            if ($(this).closest('.page-item').hasClass('disabled') || $(this).closest('.page-item').hasClass('active')) {
                return;
            }
            var page = $(this).data('page');
            var pageSize = @pageSize;
            $(novelRequestsContainerId).load('@Url.Action("NovelRequestsPartial", "Admin")?page=' + page + '&pageSize=' + pageSize);
        });

        $(novelRequestsContainerId).off('submit', '.novel-request-form-approve').on('submit', '.novel-request-form-approve', function (e) {
            e.preventDefault();
            var form = $(this);
            if (!confirm('Вы уверены, что хотите одобрить этот запрос по новелле?')) return;

            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        alert(response.message); // Replace with a nicer toast notification if available
                        var currentPage = @currentPage;
                        var pageSize = @pageSize;
                        $(novelRequestsContainerId).load('@Url.Action("NovelRequestsPartial", "Admin")?page=' + currentPage + '&pageSize=' + pageSize);
                    } else {
                        alert('Ошибка: ' + response.message);
                    }
                },
                error: function () {
                    alert('Произошла ошибка при отправке запроса на одобрение новеллы.');
                }
            });
        });

        $(novelRequestsContainerId).off('submit', '.novel-request-form-reject').on('submit', '.novel-request-form-reject', function (e) {
            e.preventDefault();
            var form = $(this);
            var modalElement = form.closest('.modal');

            if (!confirm('Вы уверены, что хотите отклонить этот запрос по новелле?')) return;

            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize(), // Includes requestId from hidden input and reason (as moderationComment)
                success: function (response) {
                    if (response.success) {
                        alert(response.message); // Replace with a nicer toast notification
                        if (modalElement.length > 0) {
                             var modalInstance = bootstrap.Modal.getInstance(modalElement[0]);
                             if(modalInstance) modalInstance.hide();
                        }
                        var currentPage = @currentPage;
                        var pageSize = @pageSize;
                        $(novelRequestsContainerId).load('@Url.Action("NovelRequestsPartial", "Admin")?page=' + currentPage + '&pageSize=' + pageSize);
                    } else {
                        alert('Ошибка: ' + response.message);
                    }
                },
                error: function () {
                     alert('Произошла ошибка при отправке запроса на отклонение новеллы.');
                }
            });
        });
    });
</script>
